---
import { techs } from "@components/logos";
import Image from "astro/components/Image.astro";
interface Project {
	title: string;
	description: string;
	technologies: string[];
	link: string;
	image: ImageMetadata;
}
// Desestructuramos la prop 'proyecto' de Astro.props
const { proyecto, index } = Astro.props;
---

<div transition:animate="slide" class={`project-container bg-gray-800 rounded-lg p-6 shadow-md mb-6 w-full justify-between flex items-center ${index%2==0?'flex-row':'flex-row-reverse text-end items-end'}`}>
    <div class="info w-[50%]">
        <h2 class="text-2xl font-bold mb-4">{proyecto.title}</h2>
        <p class="text-base text-gray-400 mb-4">{proyecto.description}</p>
        

        <ul class={`flex gap-4 mb-4 ${index%2!=0 ? 'justify-end' : ''}`}>
            {proyecto.technologies.map((techProject: string) => {
                const techInList = techs.find(tech => techProject.toLowerCase() === tech.name.toLowerCase());
                return (
                    <li key={techProject}>
                        {techInList ? (
                            <Image src={techInList.img} alt={`${techInList.name} logo`} style="width: 30px; height: 30px;" title={techInList.name} />
                        ) : (
                            techProject
                        )}
                    </li>
                );
            })}
        </ul>
        <a href={proyecto.link} class="text-blue-400 hover:underline mb-4 inline-block">View Project</a>
    </div>
    {proyecto.video ? (
        <div class="video-container mb-4">
            <iframe
                width="100%"
                height="200"
                src={proyecto.video}
                frameborder="0"
                allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
                allowfullscreen
                title={`Video for ${proyecto.title}`}
            ></iframe>
        </div>
    ):<Image src={proyecto.image} alt={proyecto.title} width={300}/> }
    
</div>
